{"version":3,"file":"hyperleaflet.esm.js","sources":["../src/Hyperchange/hyperchange.js","../src/utils.js","../src/config.js","../src/Map/events.js","../src/Map/map.js","../src/Geometry/events.js","../src/Geometry/geometry.js","../src/Hyperleaflet/hyperleafletGeometryHandler.js","../src/Hyperleaflet/events.js","../src/Layers/layers.js","../src/Layers/tileLayers.js","../src/Hyperleaflet/hyperleaflet.js","../src/index.js"],"sourcesContent":["/* eslint-disable object-shorthand */\nconst hyperChangeDetection = {\n  events: {},\n  /**\n   * @param {string} targetSelector\n   * @param {string} uniqueAttribute\n   * @param {string[]} attributeFilter\n   */\n  observe: function ({ targetSelector, uniqueAttribute, attributeFilter }) {\n    if (this.events[targetSelector]) {\n      throw new Error(\"Can't observer twice\");\n    }\n    observeChangesInTarget(targetSelector, uniqueAttribute, attributeFilter);\n    this.events[targetSelector] = {};\n  },\n\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {(nodes: Node[] | *)=>void} secondFunction\n   */\n  subscribe: function (targetSelector, evName, secondFunction) {\n    this.events[targetSelector][evName] = this.events[targetSelector][evName] || [];\n    this.events[targetSelector][evName].push(secondFunction);\n  },\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {*} fn\n   * */\n  unsubscribe: function (targetSelector, evName, fn) {\n    if (this.events[targetSelector][evName]) {\n      this.events[targetSelector][evName] = this.events[targetSelector][evName].filter((f) => f !== fn);\n    }\n  },\n\n  /**\n   * @param {string} targetSelector\n   * @param {'node_adds' | 'node_removes', 'node_changes'} evName\n   * @param {*} data\n   */\n  publish: function (targetSelector, evName, data) {\n    if (this.events[targetSelector][evName]) {\n      this.events[targetSelector][evName].forEach((f) => {\n        f(data);\n      });\n    }\n  },\n};\nwindow.pubsub = hyperChangeDetection;\n\n/**\n * @param {string} targetSelector\n * @param {string} uniqueAttribute\n * @param {string[]} attributeFilter\n */\nfunction observeChangesInTarget(targetSelector, uniqueAttribute, attributeFilter) {\n  const observer = new MutationObserver((mutationsList) => {\n    const removedNodes = [];\n    const addedNodes = [];\n    // Iterate through the mutations\n    mutationsList.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        // Child nodes added or removed\n        removedNodes.push(...findNodesWithAttribute(mutation.removedNodes));\n        addedNodes.push(...findNodesWithAttribute(mutation.addedNodes));\n      } else if (mutation.type === 'attributes') {\n        const attribute = mutation.attributeName;\n        const attributeChange = {\n          attribute: attribute,\n          from: mutation.oldValue,\n          to: mutation.target.getAttribute(attribute),\n          [uniqueAttribute]: mutation.target.getAttribute(uniqueAttribute),\n        };\n        const changedNode = [{ dataset: mutation.target.dataset, ...attributeChange }];\n        if (changedNode.length) {\n          hyperChangeDetection.publish(targetSelector, 'node_changes', changedNode);\n        }\n      }\n    });\n\n    const changedNodes = [];\n    const removedNodeMap = new Map(removedNodes.map((node) => [node.getAttribute(uniqueAttribute), node]));\n    const jointNodeSet = new Set();\n    addedNodes.forEach((addNode) => {\n      const addNodeId = addNode.getAttribute(uniqueAttribute);\n      const oldNode = removedNodeMap.get(addNodeId);\n      if (oldNode) {\n        jointNodeSet.add(addNodeId);\n      }\n      if (oldNode && !isEqualNode(oldNode, addNode, attributeFilter)) {\n        const attributeChanges = attributeFilter.reduce((changes, attribute) => {\n          const from = oldNode.getAttribute(attribute);\n          const to = addNode.getAttribute(attribute);\n\n          if (from !== to) {\n            changes.push({ attribute, from, to, [uniqueAttribute]: addNodeId });\n          }\n\n          return changes;\n        }, []);\n        changedNodes.push({ ...attributeChanges, dataset: addNode.dataset });\n      }\n    });\n\n    const reallyRemovedNodes =\n      removedNodes.filter((node) => !jointNodeSet.has(node.getAttribute(uniqueAttribute))) ?? [];\n    const reallyAddedNodes = addedNodes.filter((node) => !jointNodeSet.has(node.getAttribute(uniqueAttribute))) ?? [];\n\n    if (reallyAddedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_adds', reallyAddedNodes);\n    }\n    if (changedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_changes', changedNodes);\n    }\n    if (reallyRemovedNodes.length) {\n      hyperChangeDetection.publish(targetSelector, 'node_removes', reallyRemovedNodes);\n    }\n  });\n\n  const isEqualNode = (oldNode, newNode, attributes) =>\n    attributes.every((attribute) => oldNode.getAttribute(attribute) === newNode.getAttribute(attribute));\n\n  function findNodesWithAttribute(nodes) {\n    const result = [];\n    nodes.forEach((node) => {\n      if (node.nodeType === 1) {\n        if (node.hasAttribute(uniqueAttribute)) {\n          result.push(node);\n        }\n        result.push(...findNodesWithAttribute(node?.childNodes));\n      }\n    });\n    return result;\n  }\n\n  // Configuration options for the observer\n  const config = {\n    childList: true,\n    subtree: true,\n    attributes: true,\n    attributeFilter: attributeFilter,\n    attributeOldValue: true,\n  };\n\n  const targetNode = document.querySelector(targetSelector);\n\n  observer.observe(targetNode, config);\n}\n\nexport default hyperChangeDetection;\n","function isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function mergeDeep(target, source) {\n  const output = { ...target };\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isObject(source[key])) {\n        if (!(key in target)) Object.assign(output, { [key]: source[key] });\n        else output[key] = mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(output, { [key]: source[key] });\n      }\n    });\n  }\n  return output;\n}\n","import { mergeDeep } from './utils';\n\nconst defaultOptions = {\n  reverseCoordinateOrder: false,\n  mapElement: '#map',\n  events: {\n    map: {\n      target: 'window',\n      mouse: ['click'],\n      state: ['zoom', 'move'],\n      extra: ['ready'],\n    },\n    geometry: {\n      target: 'window',\n      mouse: ['click'],\n      state: ['add'],\n    },\n    hyperleaflet: {\n      target: 'window',\n      state: ['ready'],\n    },\n  },\n  styles: {},\n};\nexport const Config = {\n  _options: defaultOptions,\n\n  get options() {\n    return this._options;\n  },\n\n  set options(options) {\n    this._options = mergeDeep(this._options, options);\n  },\n\n  reset() {\n    this._options = defaultOptions;\n  },\n\n  getTarget(type) {\n    const { events } = this.options;\n    const { target } = events[type];\n    switch (target) {\n      case 'window':\n        return window;\n      case 'document':\n        return document;\n      case 'map':\n        return this.options.mapElement;\n      case 'hyperleaflet':\n        return document.querySelector('[data-hyperleaflet-source]');\n      default:\n        return document.querySelector(target);\n    }\n  },\n};\n","import { Config } from '../config';\n\nfunction createStateEvent(map, eventName, _leafletEvent) {\n  const bounds = map.getBounds();\n  const min = bounds.getSouthWest();\n  const max = bounds.getNorthEast();\n  const bboxString = bounds.toBBoxString();\n  return new CustomEvent(eventName, {\n    detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: { min, max }, bboxString, _leafletEvent },\n  });\n}\n\nexport function setMapEvents(map) {\n  const eventTarget = Config.getTarget('map');\n  const { mouse, state, extra } = Config.options.events.map;\n\n  state.forEach((eventName) => {\n    map.on(eventName, (e) => {\n      const event = createStateEvent(map, `map:${eventName}`, e);\n      eventTarget.dispatchEvent(event);\n    });\n  });\n\n  mouse.forEach((eventName) => {\n    map.on(eventName, (e) => {\n      const event = new CustomEvent(`map:${eventName}`, { detail: { point: e.latlng }, _leafletEvent: e });\n      eventTarget.dispatchEvent(event);\n    });\n  });\n\n  if (extra.includes('ready')) {\n    map.whenReady(() => {\n      const event = createStateEvent(map, 'map:ready');\n      eventTarget.dispatchEvent(event);\n    });\n  }\n}\n","import * as L from 'leaflet';\nimport { setMapEvents } from './events';\nimport { Config } from '../config';\n\nfunction reverseCoordinates(point) {\n  return point.reverse();\n}\n\nfunction safeParsePoint(pointJson, reverse = false) {\n  try {\n    const point = JSON.parse(pointJson);\n    return reverse ? reverseCoordinates(point) : point;\n  } catch (_) {\n    return [0, 0];\n  }\n}\n\nexport const Map = {\n  map: null,\n  create(mapContainer) {\n    const config = Config;\n    const { center, zoom, minZoom, maxZoom } = mapContainer.dataset;\n    const { reverseCoordinateOrder } = config.options;\n    const mapView = {\n      center: safeParsePoint(center, reverseCoordinateOrder),\n      zoom: zoom || 1,\n    };\n    const leafletMap = L.map(mapContainer, {\n      center: mapView.center,\n      zoom: mapView.zoom,\n      minZoom: minZoom || 0,\n      maxZoom: maxZoom || 18,\n    });\n    setMapEvents(leafletMap);\n    this.map = leafletMap;\n    return leafletMap;\n  },\n};\n","import { Config } from '../config';\n\nconst eventTarget = Config.getTarget('map');\n\nexport function setEvents(leafletObject, id, eventType) {\n  if (Config.options.events.geometry.state.includes('click')) {\n    if (eventType === 'mono') {\n      leafletObject.on('click', (e) => {\n        const event = new CustomEvent('geometry:click', {\n          detail: { clickedPoint: e.latlng, geometry: leafletObject.getLatLng(), id },\n        });\n        eventTarget.dispatchEvent(event);\n      });\n    } else if (eventType === 'poly') {\n      leafletObject.on('click', (e) => {\n        const event = new CustomEvent('geometry:click', {\n          detail: {\n            clickedPoint: e.latlng,\n            geometry: leafletObject.getLatLngs(),\n            id,\n          },\n        });\n        eventTarget.dispatchEvent(event);\n      });\n    } else {\n      throw new Error('Invalid event type');\n    }\n  }\n}\n\nexport function sendEvent(eventType, leafletGeometry, id, geometryType, target) {\n  if (Config.options.events.geometry.state.includes('add')) {\n    const event = new CustomEvent(`geometry:${eventType}`, {\n      detail: { id, geometryType, target },\n    });\n    eventTarget.dispatchEvent(event);\n  }\n}\n","import * as L from 'leaflet';\nimport { setEvents } from './events';\nimport { Config } from '../config';\n\nconst convertGeometryCoordinates = (geometry) => {\n  if (typeof geometry === 'string') {\n    try {\n      return JSON.parse(geometry);\n    } catch (error) {\n      console.warn('Failed to parse the geometry string.');\n      return null;\n    }\n  }\n  return null;\n};\n\nconst createHyperleafletGeometryParams = (dataset) => {\n  const hyperleafletOptions = Config.options;\n  const { geometry, geometryType, style, popup, tooltip, id } = dataset;\n  const { styles } = hyperleafletOptions;\n\n  const convertedGeometry = convertGeometryCoordinates(geometry);\n  const computedStyle = styles?.[geometryType]?.[style];\n\n  const options = {\n    style: computedStyle,\n    popup,\n    tooltip,\n    id,\n  };\n\n  return { geometry: convertedGeometry, geometryType, options };\n};\n\nexport const Geometry = {\n  types: {\n    point: {\n      create: (geometry, styleOptions, _extraParams) => L.marker(geometry, styleOptions),\n      update: (leafletObject, geometry) => leafletObject.setLatLng(geometry),\n      convert: (geometry, isLonLat) => (isLonLat ? [...geometry].reverse() : geometry),\n      eventType: 'mono',\n    },\n    linestring: {\n      create: (geometry, styleOptions, _extraParams) => L.polyline(geometry, styleOptions),\n      update: (leafletObject, geometry) => leafletObject.setLatLngs(geometry),\n      convert: (geometry, isLonLat) => (isLonLat ? L.GeoJSON.coordsToLatLngs(geometry, 0) : geometry),\n      eventType: 'poly',\n    },\n    polygon: {\n      create: (geometry, styleOptions, _extraParams) => L.polygon(geometry, styleOptions),\n      update: (leafletObject, geometry) => leafletObject.setLatLngs(geometry),\n      convert: (geometry, isLonLat) => (isLonLat ? L.GeoJSON.coordsToLatLngs(geometry, 1) : geometry),\n      eventType: 'mono',\n    },\n  },\n\n  addType(type, handlers) {\n    if (!handlers.create || !handlers.update || !handlers.convert) {\n      throw new Error('Invalid handlers provided.');\n    }\n\n    this.types[type] = handlers;\n  },\n\n  shouldReverseCoordinates(reverseCoordinateOrder, reverseOrder) {\n    return reverseCoordinateOrder || reverseOrder !== undefined;\n  },\n  applyPopupAndTooltip(leafletGeometry, options) {\n    if (options.popup) {\n      leafletGeometry.bindPopup(options.popup);\n    }\n    if (options.tooltip) {\n      leafletGeometry.bindTooltip(options.tooltip);\n    }\n  },\n\n  createGeometry(dataset) {\n    const { reverseOrder, ...extraOptions } = dataset;\n    const { reverseCoordinateOrder } = Config.options;\n    const { geometry, geometryType, options } = createHyperleafletGeometryParams(dataset, Config.options);\n\n    const geometryCreator = this.types[geometryType.toLowerCase()];\n\n    const isLonLat = this.shouldReverseCoordinates(reverseCoordinateOrder, reverseOrder);\n\n    if (!geometryCreator) {\n      throw new Error(`Invalid geometry type: ${geometryType}`);\n    }\n\n    const convertedGeometry = geometryCreator.convert(geometry, isLonLat);\n\n    const leafletGeometry = geometryCreator.create(convertedGeometry, options.style, extraOptions);\n    this.applyPopupAndTooltip(leafletGeometry, options);\n\n    setEvents(leafletGeometry, options.id, geometryCreator.eventType);\n    return leafletGeometry;\n  },\n\n  updateGeometry(leafletObject, dataset) {\n    const { reverseOrder } = dataset;\n    const { reverseCoordinateOrder } = Config.options;\n\n    const isLonLat = this.shouldReverseCoordinates(reverseCoordinateOrder, reverseOrder);\n    const { geometry, geometryType } = createHyperleafletGeometryParams(dataset);\n    const typeInfo = this.types[geometryType.toLowerCase()];\n\n    if (!typeInfo) {\n      throw new Error(`Invalid geometry type: ${geometryType}`);\n    }\n\n    const convertedGeometry = typeInfo.convert(geometry, isLonLat);\n    return typeInfo.update(leafletObject, convertedGeometry);\n  },\n};\n","import { sendEvent } from '../Geometry/events';\nimport { Geometry } from '../Geometry/geometry';\n\nexport function createGeometryHandler(map, layerModule) {\n  function addNodeToHyperleaflet(node) {\n    const {\n      dataset,\n      dataset: { layerName, id },\n    } = node;\n\n    let target = map;\n    if (layerName) {\n      const layer = layerModule.getLayerGroup(layerName);\n      if (!layer) {\n        target = layerModule.createLayerGroup(layerName);\n        target.addTo(map);\n      } else {\n        target = layer;\n      }\n    }\n\n    const leafletGeometry = Geometry.createGeometry(dataset);\n    sendEvent('add', leafletGeometry, id, dataset.geometryType, target);\n    leafletGeometry.hlID = id;\n    leafletGeometry.addTo(target);\n  }\n\n  function deleteNodeFromHyperleaflet(node) {\n    const rowId = node.dataset.id;\n    const { layerName } = node.dataset;\n\n    const layer = layerModule.getLayerGroup(layerName);\n\n    const target = layer || map;\n\n    const leafletLayers = Object.values(target._layers);\n    const leafletObject = leafletLayers.find((_layer) => _layer.hlID === rowId);\n\n    target.removeLayer(leafletObject);\n    sendEvent('remove', leafletObject, rowId, node.dataset.geometryType, target);\n    layerModule.deleteLayerGroup(layerName, { ifEmpty: true });\n  }\n\n  function changeNodeInHyperleaflet(change) {\n    const rowId = change['data-id'];\n\n    const leafletLayers = Object.values(map._layers);\n    const leafletObject = leafletLayers.find((layer) => layer.hlID === rowId);\n\n    switch (change.attribute) {\n      case 'data-geometry': {\n        sendEvent('change', leafletObject, rowId, change.dataset.geometryType, map);\n        return Geometry.updateGeometry(leafletObject, change.dataset);\n      }\n      default: {\n        throw new Error('Parameter is not a number!');\n      }\n    }\n  }\n\n  return { addNodeToHyperleaflet, deleteNodeFromHyperleaflet, changeNodeInHyperleaflet };\n}\n","import { Config } from '../config';\n\nexport function sendHyperleafletReady(map) {\n  if (Config.options.events.hyperleaflet.state.includes('ready')) {\n    const bounds = map.getBounds();\n    const min = bounds.getSouthWest();\n    const max = bounds.getNorthEast();\n    const bboxString = bounds.toBBoxString();\n    const event = new CustomEvent('hyperleaflet:ready', {\n      detail: { zoom: map.getZoom(), center: map.getCenter(), bbox: { min, max }, bboxString },\n    });\n    window.dispatchEvent(event);\n  }\n}\n","import * as L from 'leaflet';\n\nfunction reverseCoordinates(point) {\n  return point.reverse();\n}\n\nexport function safeParsePoint(pointJson, reverse = false) {\n  try {\n    const point = JSON.parse(pointJson);\n    return reverse ? reverseCoordinates(point) : point;\n  } catch (_) {\n    return [0, 0];\n  }\n}\n\nexport const Layers = {\n  control: L.control.layers(),\n  layerGroups: {},\n\n  addBaseLayer(baseLayer, layerName) {\n    this.control.addBaseLayer(baseLayer, layerName);\n  },\n  getLayerGroup(layerName) {\n    return this.layerGroups?.[layerName];\n  },\n  createLayerGroup(layerName) {\n    const layerGroup = L.layerGroup();\n    this.layerGroups[layerName] = layerGroup;\n    this.control.addOverlay(layerGroup, layerName);\n    return layerGroup;\n  },\n  deleteLayerGroup(layerName, options = { ifEmpty: false }) {\n    if (options.ifEmpty && this.layerGroups[layerName].getLayers().length) {\n      return;\n    }\n    const layerGroup = this.layerGroups[layerName];\n    delete this.layerGroups[layerName];\n    this.control.removeLayer(layerGroup);\n  },\n};\n","import * as L from 'leaflet';\n\nexport const TileLayers = {\n  _tileLayers: {\n    OpenStreetMap: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    }),\n    EsriWorldImagery: L.tileLayer(\n      'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n      {\n        attribution:\n          'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n      },\n    ),\n  },\n  _addTileLayer(name, { url, minZoom, maxZoom, tms } = {}) {\n    if (this._tileLayers[name]) {\n      return;\n    }\n    const newTileLayer = new L.TileLayer(url, { minZoom: minZoom || 0, maxZoom: maxZoom || 18, tms: !!tms });\n    this._tileLayers[name] = newTileLayer.tile;\n  },\n\n  _getDefaultHyperleafletTile(tileLayerElementList) {\n    const defaultTileLayerElement = tileLayerElementList.find((t) => 'defaultTile' in t.dataset);\n    if (defaultTileLayerElement && defaultTileLayerElement.dataset.tile in this._tileLayers) {\n      return this._tileLayers[defaultTileLayerElement.dataset.tile];\n    }\n    if (tileLayerElementList.length && tileLayerElementList[0].dataset.tile in this._tileLayers) {\n      return this._tileLayers[tileLayerElementList[0].dataset.tile];\n    }\n    return this._tileLayers.OpenStreetMap;\n  },\n\n  tiles: [],\n  defaultTile: undefined,\n  nodesToTiles(tileLayerElementNodeList) {\n    const tileLayerElementList = Array.from(tileLayerElementNodeList);\n    tileLayerElementList.forEach((tileLayerElement) => {\n      const { tile } = tileLayerElement.dataset;\n\n      if (!(tile in this._tileLayers)) {\n        const { tileUrl, tms, minZoom, maxZoom } = tileLayerElement.dataset;\n        this._addTileLayer(tile, { tileUrl, tms, minZoom, maxZoom });\n      }\n      this.tiles.push({ name: tile, tile: this._tileLayers[tile] });\n    });\n\n    this.defaultTile = this._getDefaultHyperleafletTile(tileLayerElementList);\n    return {\n      defaultTile: this.defaultTile,\n      tiles: this.tiles,\n    };\n  },\n};\n","import hyperChangeDetection from '../Hyperchange/hyperchange';\n\nimport { Map } from '../Map/map';\nimport { createGeometryHandler } from './hyperleafletGeometryHandler';\nimport { sendHyperleafletReady } from './events';\nimport { Geometry } from '../Geometry/geometry';\nimport { Layers } from '../Layers/layers';\nimport { TileLayers } from '../Layers';\nimport { Config } from '../config';\n\nconst HYPERLEAFLET_DATA_SOURCE = '[data-hyperleaflet-source]';\n\nexport const Hyperleaflet = {\n  beforeNodeAdd: [],\n  afterNodeAdd: [],\n  beforeNodeRemove: [],\n  afterNodeRemove: [],\n  beforeNodeChange: [],\n  afterNodeChange: [],\n  addNode: [],\n  removeNode: [],\n  changeNode: [],\n\n  initialize(mapContainer) {\n    this.map = Map.create(mapContainer);\n    this.initializeLayerControl(mapContainer, this.map);\n    this.initializeHyperleafletDataSource();\n    sendHyperleafletReady(this.map);\n  },\n\n  addExtension(extension) {\n    if (extension.layer) {\n      Layers.control.addOverlay(extension.layer);\n    }\n\n    if (extension.addNode && typeof extension.addNode === 'function') {\n      this.addNode.push((node) => extension.addNode(node));\n    }\n\n    if (extension.removeNode && typeof extension.removeNode === 'function') {\n      this.removeNode.push((node) => extension.removeNode(node));\n    }\n\n    if (extension.changeNode && typeof extension.changeNode === 'function') {\n      this.changeNode.push((node) => extension.changeNode(node));\n    }\n\n    // If the extension has a custom onNodeAdded hook, add it to the list\n    if (extension.beforeNodeAdd && typeof extension.beforeNodeAdd === 'function') {\n      this.beforeNodeAdd.push((node) => extension.beforeNodeAdd(node));\n    }\n\n    if (extension.afterNodeAdd && typeof extension.afterNodeAdd === 'function') {\n      this.afterNodeAdd.push(extension.afterNodeAdd);\n    }\n\n    if (extension.beforeNodeRemove && typeof extension.beforeNodeRemove === 'function') {\n      this.beforeNodeRemove.push(extension.beforeNodeRemove);\n    }\n\n    if (extension.afterNodeRemove && typeof extension.afterNodeRemove === 'function') {\n      this.afterNodeRemove.push(extension.afterNodeRemove);\n    }\n\n    if (extension.beforeNodeChange && typeof extension.beforeNodeChange === 'function') {\n      this.beforeNodeChange.push(extension.beforeNodeChange);\n    }\n\n    if (extension.afterNodeChange && typeof extension.afterNodeChange === 'function') {\n      this.afterNodeChange.push(extension.afterNodeChange);\n    }\n  },\n\n  initializeHyperleafletDataSource() {\n    const hyperleafletDataSource = document.querySelector(HYPERLEAFLET_DATA_SOURCE);\n\n    if (!hyperleafletDataSource) return;\n\n    const { addNodeToHyperleaflet, deleteNodeFromHyperleaflet, changeNodeInHyperleaflet } = createGeometryHandler(\n      this.map,\n      Layers,\n    );\n\n    this.map.whenReady(() => {\n      const nodes = hyperleafletDataSource.querySelectorAll('[data-id]');\n      nodes.forEach((node) => {\n        this.beforeNodeAdd.forEach((hook) => hook(node));\n        if (node.dataset.hyperleafletExtension) {\n          this.addNode.forEach((hook) => hook(node));\n        } else {\n          addNodeToHyperleaflet(node);\n        }\n        this.afterNodeAdd.forEach((hook) => hook(node));\n      });\n    });\n\n    hyperChangeDetection.observe({\n      targetSelector: HYPERLEAFLET_DATA_SOURCE,\n      uniqueAttribute: 'data-id',\n      attributeFilter: ['data-geometry'],\n    });\n\n    hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_adds', (nodes) => {\n      nodes.forEach((node) => {\n        this.beforeNodeAdd.forEach((hook) => hook(node));\n        if (node.dataset.hyperleafletExtension) {\n          this.addNode.forEach((hook) => hook(node));\n        } else {\n          addNodeToHyperleaflet(node);\n        }\n        this.afterNodeAdd.forEach((hook) => hook(node));\n      });\n    });\n\n    hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_removes', (nodes) => {\n      nodes.forEach((node) => {\n        this.beforeNodeRemove.forEach((hook) => hook(node));\n        if (node.dataset.hyperleafletExtension) {\n          this.removeNode.forEach((hook) => hook(node));\n        } else {\n          deleteNodeFromHyperleaflet(node);\n        }\n        this.beforeNodeRemove.forEach((hook) => hook(node));\n      });\n    });\n\n    hyperChangeDetection.subscribe(HYPERLEAFLET_DATA_SOURCE, 'node_changes', (changes) => {\n      changes.forEach((change) => {\n        this.afterNodeChange.forEach((hook) => hook(change));\n        if (change.dataset.hyperleafletExtension) {\n          this.changeNode.forEach((hook) => hook(change));\n        } else {\n          changeNodeInHyperleaflet(change);\n        }\n        this.afterNodeChange.forEach((hook) => hook(change));\n      });\n    });\n  },\n\n  initializeLayerControl(mapContainer) {\n    const tileLayerElementList = mapContainer.querySelectorAll('[data-tile]');\n    const { defaultTile, tiles } = TileLayers.nodesToTiles(tileLayerElementList);\n\n    const layerControl = Layers.control;\n    layerControl.addTo(this.map);\n\n    tiles.forEach(({ name, tile }) => {\n      Layers.addBaseLayer(tile, name);\n    });\n\n    defaultTile.addTo(this.map);\n  },\n};\n\nHyperleaflet.addGeometryType = (type, customGeometryType) => {\n  Geometry.addType(type, customGeometryType);\n};\n\nHyperleaflet.options = Config.options;\n","import { Hyperleaflet } from './Hyperleaflet';\nimport { Config } from './config';\n\n(function () {\n  document.addEventListener('DOMContentLoaded', () => {\n    Hyperleaflet.initialize(document.querySelector(Config.options.mapElement));\n  });\n})();\n\nwindow.hyperleaflet = Hyperleaflet;\nconst hyperleaflet = Hyperleaflet;\nexport { hyperleaflet };\n"],"names":["hyperChangeDetection","events","observe","_ref","targetSelector","uniqueAttribute","attributeFilter","Error","observeChangesInTarget","subscribe","evName","secondFunction","push","unsubscribe","fn","filter","f","publish","data","forEach","window","pubsub","observer","MutationObserver","mutationsList","_removedNodes$filter","_addedNodes$filter","removedNodes","addedNodes","mutation","type","apply","findNodesWithAttribute","_attributeChange","attribute","attributeName","attributeChange","from","oldValue","to","target","getAttribute","changedNode","_extends","dataset","length","changedNodes","removedNodeMap","Map","map","node","jointNodeSet","Set","addNode","addNodeId","oldNode","get","add","isEqualNode","attributeChanges","reduce","changes","_changes$push","reallyRemovedNodes","has","reallyAddedNodes","newNode","attributes","every","nodes","result","nodeType","hasAttribute","childNodes","config","childList","subtree","attributeOldValue","targetNode","document","querySelector","isObject","item","Array","isArray","mergeDeep","source","output","Object","keys","key","_Object$assign","assign","_Object$assign2","defaultOptions","reverseCoordinateOrder","mapElement","mouse","state","extra","geometry","hyperleaflet","styles","Config","_options","options","reset","getTarget","createStateEvent","eventName","_leafletEvent","bounds","getBounds","min","getSouthWest","max","getNorthEast","bboxString","toBBoxString","CustomEvent","detail","zoom","getZoom","center","getCenter","bbox","setMapEvents","eventTarget","_Config$options$event","on","e","event","dispatchEvent","point","latlng","includes","whenReady","reverseCoordinates","reverse","safeParsePoint","pointJson","JSON","parse","_","create","mapContainer","_mapContainer$dataset","minZoom","maxZoom","mapView","leafletMap","L","setEvents","leafletObject","id","eventType","clickedPoint","getLatLng","getLatLngs","sendEvent","leafletGeometry","geometryType","convertGeometryCoordinates","error","console","warn","createHyperleafletGeometryParams","_styles$geometryType","hyperleafletOptions","style","popup","tooltip","convertedGeometry","computedStyle","Geometry","types","styleOptions","_extraParams","marker","update","setLatLng","convert","isLonLat","concat","linestring","polyline","setLatLngs","GeoJSON","coordsToLatLngs","polygon","addType","handlers","shouldReverseCoordinates","reverseOrder","undefined","applyPopupAndTooltip","bindPopup","bindTooltip","createGeometry","extraOptions","_objectWithoutPropertiesLoose","_excluded","_createHyperleafletGe","geometryCreator","toLowerCase","updateGeometry","_createHyperleafletGe2","typeInfo","createGeometryHandler","layerModule","addNodeToHyperleaflet","_node$dataset","layerName","layer","getLayerGroup","createLayerGroup","addTo","hlID","deleteNodeFromHyperleaflet","rowId","leafletLayers","values","_layers","find","_layer","removeLayer","deleteLayerGroup","ifEmpty","changeNodeInHyperleaflet","change","sendHyperleafletReady","Layers","control","layers","layerGroups","addBaseLayer","baseLayer","_this$layerGroups","layerGroup","addOverlay","getLayers","TileLayers","_tileLayers","OpenStreetMap","tileLayer","attribution","EsriWorldImagery","_addTileLayer","name","_temp","url","tms","newTileLayer","TileLayer","tile","_getDefaultHyperleafletTile","tileLayerElementList","defaultTileLayerElement","t","tiles","defaultTile","nodesToTiles","tileLayerElementNodeList","_this","tileLayerElement","_tileLayerElement$dat","tileUrl","HYPERLEAFLET_DATA_SOURCE","Hyperleaflet","beforeNodeAdd","afterNodeAdd","beforeNodeRemove","afterNodeRemove","beforeNodeChange","afterNodeChange","removeNode","changeNode","initialize","initializeLayerControl","initializeHyperleafletDataSource","addExtension","extension","hyperleafletDataSource","_createGeometryHandle","querySelectorAll","hook","hyperleafletExtension","_TileLayers$nodesToTi","layerControl","addGeometryType","customGeometryType","addEventListener"],"mappings":"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"}